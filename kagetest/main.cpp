#include <chrono>
#include <iostream>
#include <vector>

#ifdef _WIN32
#    include <windows.h>
#endif

#include "export.h"
#include "kage.h"

int main(int argc, char** argv) {
#ifdef _WIN32
    setlocale(LC_ALL, ".utf-8");
    SetConsoleOutputCP(CP_UTF8);
#endif
    Kage::Kage kage;

    kage.PushBuhin("test",
        "1:12:13:25:28:24:95$1:2:2:25:28:81:28$1:22:23:81:28:80:95$1:32:32:53:"
        "28:52:95$1:0:0:12:61:100:61$1:2:2:24:95:80:95$1:0:4:108:21:110:93$1:0:"
        "0:165:23:165:46$1:0:413:142:15:132:63$1:2:0:132:63:175:57$1:0:313:139:"
        "79:139:99$1:2:2:139:99:160:99$1:0:24:160:66:160:99$2:0:7:30:130:27:"
        "167:11:187$2:0:7:27:184:47:178:65:165$2:0:5:37:110:44:133:57:152$2:7:"
        "4:119:104:135:117:135:134$2:32:7:84:106:77:124:62:142$1:0:2:59:106:"
        "102:106$3:22:5:102:106:96:165:122:165$3:0:0:78:140:76:180:117:180$4:0:"
        "5:164:109:131:179:177:179$6:7:8:132:106:155:112:146:145:171:139$7:0:7:"
        "184:14:184:88:184:146:166:171");
    kage
        .PushBuhin("u6f22",
            "99:150:0:9:12:73:200:u6c35-07:0:-10:50$99:0:0:54:10:190:199:"
            "u26c29-" "07");
    kage
        .PushBuhin("u6c35-07",
            "2:7:8:33:20:59:28:69:41$2:7:8:12:68:38:75:49:89$2:7:8:14:133:54:"
            "142:" "50:184$2:12:7:47:143:49:138:86:58");
    kage.PushBuhin("u26c29-07",
        "1:0:0:18:29:187:29$1:0:0:73:10:73:48$1:0:0:132:10:132:48$1:12:13:44:"
        "59:44:87$1:2:2:44:59:163:59$1:22:23:163:59:163:87$1:2:2:44:87:163:87$"
        "1:0:0:32:116:176:116$1:0:0:21:137:190:137$7:32:7:102:59:102:123:102:"
        "176:10:190$2:7:0:105:137:126:169:181:182");

    Kage::Canva ca;
    auto        tic = std::chrono::system_clock::now();
    kage.MakeGlyph(ca, "test");
    auto toc = std::chrono::system_clock::now();
    std::cout << std::chrono::duration_cast<std::chrono::nanoseconds>(toc - tic)
                     .count() /
            1000000.
              << "ms" << std::endl;

    std::cout << Kage::StrokesToString(kage.ExtractGlyph("test")) << std::endl;

    std::cout << Canva2SFD(ca) << std::endl;

    return 0;
}
